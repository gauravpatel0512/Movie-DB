{"version":3,"sources":["GlobalStyle.js","images/react-movie-logo.svg","images/tmdb_logo.svg","components/Header/Header.styles.js","components/Header/index.js","config.js","components/HeroImage/HeroImage.styles.js","components/HeroImage/index.js","components/Grid/Grid.styles.js","components/Grid/index.js","components/Thumb/Thumb.styles.js","components/Thumb/index.js","components/Spinner/index.js","components/Spinner/Spinner.styles.js","images/search-icon.svg","components/SearchBar/SearchBar.styles.js","components/SearchBar/index.js","components/Button/Button.styles.js","components/Button/index.js","API.js","helpers.js","hooks/useHomeFetch.js","images/no_image.jpg","components/Home.js","components/BreadCrumb/BreadCrumb.styles.js","components/BreadCrumb/index.js","components/MovieInfo/MovieInfo.styles.js","components/MovieInfo/index.js","components/MovieInfoBar/MovieInfoBar.styles.js","components/MovieInfoBar/index.js","components/Actor/Actor.styles.js","components/Actor/index.js","components/Movie.js","hooks/useMovieFetch.js","components/NotFound.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","Content","LogoImg","img","TMDBLogoImg","Header","to","src","RMDBLogo","alt","TMDBLogo","API_URL","API_KEY","process","SEARCH_BASE_URL","POPULAR_BASE_URL","REQUEST_TOKEN_URL","LOGIN_URL","SESSION_ID_URL","IMAGE_BASE_URL","BACKDROP_SIZE","POSTER_SIZE","image","Text","HeroImage","title","text","Grid","header","children","Image","Thumb","movieId","clickable","Spinner","SearchBar","setSearchTerm","useState","state","setState","initial","useRef","useEffect","current","timer","setTimeout","clearTimeout","searchIcon","type","placeholder","onChange","event","currentTarget","value","button","Button","callback","onClick","defaultConfig","method","headers","apiSettings","fetchMovies","searchTerm","page","a","endpoint","fetch","json","fetchMovie","fetchCredits","creditsEndpoint","getRequestToken","reqToken","request_token","authenticate","requestToken","username","password","bodyData","body","JSON","stringify","success","sessionId","rateMovie","rating","calcTime","time","hours","Math","floor","mins","convertMoney","money","Intl","NumberFormat","style","currency","minimumFractionDigits","format","isPersistedState","stateName","sessionState","sessionStorage","getItem","parse","initialState","results","total_pages","total_results","Home","loading","setLoading","error","setError","isLoadingMore","setIsLoadingMore","API","movies","prev","console","log","setItem","useHomeFetch","backdrop_path","original_title","overview","map","movie","poster_path","NoIamge","id","BreadCrumb","movieTitle","backdrop","MovieInfo","NoImage","className","vote_average","directors","length","director","name","credit_id","MovieInfoBar","budget","revenue","Actor","character","imageUrl","Movie","credits","crew","filter","member","job","actors","cast","useMovieFetch","useParams","runtime","actor","profile_path","NotFound","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.18ee57d6.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n:root{\r\n    --maxWidth: 1280px;\r\n    --white:#fff;\r\n    --lightGrey:#eee;\r\n    --medGrey: #353535;\r\n    --darkGrey:#1c1c1c;\r\n    --fontSuperBig:2.5rem;\r\n    --fontBig:1.5rem;\r\n    --fontSmall:1rem;\r\n    --H1: yellow;\r\n}\r\n\r\n*{\r\n    box-sizing: border-box;\r\n    font-family: 'Abel', sans-serif;\r\n}\r\n\r\nbody{\r\n    margin: 0;\r\n    padding: 0;\r\n\r\n    h1{\r\n    \r\n        font-size: 2rem;\r\n        font-weight: 600;\r\n        color: var(--medGrey);\r\n    }\r\n    \r\n    h3 {\r\n        font-size: 1.1rem;\r\n        font-weight: 600;\r\n    \r\n    }\r\n    p {\r\n        font-size: 1rem;\r\n        color: var(--white);\r\n    } \r\n}\r\n\r\n\r\n`;","export default __webpack_public_path__ + \"static/media/react-movie-logo.42955eb6.svg\";","export default __webpack_public_path__ + \"static/media/tmdb_logo.f15b6632.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n`;\r\n\r\nexport const Content = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    max-width: var(--maxWidth);\r\n    padding: 20px 0;\r\n    margin:0 auto;\r\n`;\r\n\r\nexport const LogoImg = styled.img`\r\n    width: 190px;\r\n    padding-left: 25px;\r\n    @media screen and (max-width: 500px){\r\n        width: 150px;\r\n    }\r\n`;\r\n\r\nexport const TMDBLogoImg = styled.img`\r\n    width: 120px;\r\n    padding-right: 30px;\r\n    @media screen and (max-width:500px){\r\n        width: 80px;\r\n    }\r\n`;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n//Logo\r\nimport RMDBLogo from '../../images/react-movie-logo.svg';\r\nimport TMDBLogo from '../../images/tmdb_logo.svg';\r\n\r\n//Styles\r\nimport { Wrapper, Content, LogoImg, TMDBLogoImg } from './Header.styles';\r\n\r\nconst Header = () => (\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <LogoImg src={RMDBLogo} alt='rmdb-logo' />\r\n\r\n            </Link>\r\n            <TMDBLogoImg src={TMDBLogo} alt='tmdb-logo' />\r\n        </Content>\r\n\r\n    </Wrapper>\r\n);\r\n\r\nexport default Header;","// Configuration for TMDB API\n// Read more about the API here: https://developers.themoviedb.org/\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_API_KEY;\n\nconst SEARCH_BASE_URL = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=`;\nconst POPULAR_BASE_URL = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US`;\n// For login and voting\nconst REQUEST_TOKEN_URL = `${API_URL}authentication/token/new?api_key=${API_KEY}`;\nconst LOGIN_URL = `${API_URL}authentication/token/validate_with_login?api_key=${API_KEY}`;\nconst SESSION_ID_URL = `${API_URL}authentication/session/new?api_key=${API_KEY}`;\n\nconst IMAGE_BASE_URL = 'http://image.tmdb.org/t/p/';\n// Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w780';\n\nexport {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL,\n};\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    background: linear-gradient(\r\n        to left  bottom, \r\n        rgba(0,0,0,0) 41%,\r\n        rgba(0,0,0,1) 100%\r\n    ),\r\n        url(${({image}) => image}), var(--medGrey);\r\n    background-size: 100%, cover;\r\n    background-position: center;\r\n    height: 600px;\r\n    position: relative;\r\n    animation: animateHeroImage 1s ;\r\n\r\n\r\n    @keyframes animateHeroImage{\r\n        from {\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\n    padding: 20px;\r\n    max-width: var(--maxWidht);\r\n    margin: 0 auto;\r\n\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\r\n    z-index: 100;\r\n    max-width: 700px;\r\n    position: absolute;\r\n    bottom: 40px;\r\n    margin-right: 20px;\r\n    min-height: 100px;\r\n    color: var(--white);\r\n\r\n    h1{\r\n        font-size: var(--fontSuperBig);\r\n        color: var(--H1);\r\n\r\n        @media screen and (max-width:720px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n    p{\r\n        font-size: var(--fontMed);\r\n\r\n        @media screen and (max-width: 720px){\r\n            font-size: var(--fontSmall);\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width: 720px){\r\n        max-width: 100%;\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from './HeroImage.styles';\r\n\r\nconst HeroImage = ({ image, title,text }) =>(\r\n    <Wrapper image={image} >\r\n        <Content>\r\n            <Text>\r\n                <h1> {title} </h1>\r\n                <p> {text} </p>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default HeroImage;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    padding: 0 20px;\r\n\r\n    h1{\r\n        color: var(--medGrey);\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\n    display: grid;\r\n    grid-template-columns: repeat( auto-fill, minmax(200px, 1fr) );\r\n    grid-gap: 2rem;\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\n\r\nimport { Wrapper, Content } from './Grid.styles';\r\n\r\nconst Grid = ({ header, children}) => (\r\n    <Wrapper>\r\n        <h1> {header} </h1>\r\n        <Content> {children} </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default Grid;","import styled from \"styled-components\";\r\n\r\nexport const Image = styled.img`\r\n\r\n    width: 100%;\r\n    max-width: 720px;\r\n    transition: all 0.3s;\r\n    object-fit: cover;\r\n    border-radius: 20px;\r\n    animation: animateThumb 0.7s;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @keyframes animateThumb{\r\n        from{\r\n            opacity: 0;\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles\r\nimport { Image } from './Thumb.styles';\r\n\r\nconst Thumb = ({ image, movieId, clickable }) =>(\r\n\r\n    <div>\r\n        {clickable ? (\r\n            <Link to={`/${movieId}`}>\r\n                <Image src={image} alt='movie-thumb' /> \r\n            </Link>\r\n        ) : (\r\n            <Image src={image} alt='movie-thumb' /> \r\n        )}\r\n    </div>\r\n\r\n);\r\n\r\nexport default Thumb;","import {Spinner} from './Spinner.styles';\r\n\r\nexport default Spinner;","import styled from \"styled-components\";\r\n\r\nexport const Spinner = styled.div`\r\n\r\n    border: 5px solid var(--lightGrey);\r\n    border-top: 5px solid var(--medGrey);\r\n    border-radius: 50%;\r\n    width: 60px;\r\n    height: 60px;\r\n    animation: spin 0.8s linear infinite;\r\n    margin: 20px auto;\r\n\r\n    @keyframes spin{\r\n        0%{\r\n            transform: rotate(0deg);\r\n        }\r\n        100%{\r\n            transform: rotate(360deg);\r\n        }\r\n    }\r\n\r\n\r\n`;","export default __webpack_public_path__ + \"static/media/search-icon.cd820f5a.svg\";","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 20px;\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\n    position: relative;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    height: 50px;\r\n    background: var(--medGrey);\r\n    margin: 0 auto;\r\n    border-radius: 40px;\r\n    color: var(--white);\r\n\r\n    img{\r\n        position: absolute;\r\n        left: 13px;\r\n        top: 13px;\r\n        width: 25px;\r\n    }\r\n\r\n    input{\r\n        font-size: var(--fontBig);\r\n        position: absolute;\r\n        left: 0;\r\n        margin: 7px 0;\r\n        padding: 0 0 0 55px;\r\n        border: 0;\r\n        width: 95%;\r\n        background: transparent;\r\n        height: 40px;\r\n        color: var(--white);\r\n\r\n        :focus{\r\n            outline: none;\r\n        }\r\n    }\r\n\r\n` ;","import React, { useState, useEffect, useRef} from 'react';\r\n\r\n//Image\r\nimport searchIcon from '../../images/search-icon.svg';\r\n\r\n// Styles\r\nimport { Wrapper, Content } from './SearchBar.styles';\r\n\r\nconst SearchBar = ({ setSearchTerm }) => {\r\n\r\n    const [state, setState] = useState('');\r\n\r\n    const initial = useRef(true);\r\n    \r\n    \r\n    useEffect(() => {\r\n\r\n        if(initial.current){\r\n            initial.current = false;\r\n            return;\r\n        }\r\n        \r\n        const timer = setTimeout(()=>{\r\n            setSearchTerm(state);\r\n        }, 500)\r\n\r\n        return ()=>clearTimeout(timer)\r\n\r\n    }, [setSearchTerm, state])\r\n\r\n    return(\r\n        <Wrapper>\r\n            <Content>\r\n                <img src={searchIcon} alt = 'search-icon' />\r\n\r\n                <input \r\n                    type='text'\r\n                    placeholder = 'Search Movie'\r\n                    onChange={event => setState(event.currentTarget.value)}\r\n                    value={state}\r\n                />\r\n\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.button`\r\n\r\n    display: block;\r\n    background: var(--darkGrey);\r\n    width: 25%;\r\n    min-width: 200px;\r\n    height: 60px;\r\n    border-radius: 30px;\r\n    color: var(--white);\r\n    border: 0;\r\n    font-size: var(--fontBig);\r\n    margin: 20px auto;\r\n    transition: all 0.3s;\r\n    outline: none;\r\n    cursor: pointer;\r\n\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper } from './Button.styles';\r\n\r\nconst Button = ({callback, text}) => (\r\n    <Wrapper type='button' onClick={callback}>\r\n\r\n    {text}\r\n\r\n    </Wrapper>\r\n);\r\n\r\nexport default Button;","import {\n  SEARCH_BASE_URL,\n  POPULAR_BASE_URL,\n  API_URL,\n  API_KEY,\n  REQUEST_TOKEN_URL,\n  LOGIN_URL,\n  SESSION_ID_URL\n} from './config';\n\nconst defaultConfig = {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\n\nconst apiSettings = {\n  fetchMovies: async (searchTerm, page) => {\n    const endpoint = searchTerm\n      ? `${SEARCH_BASE_URL}${searchTerm}&page=${page}`\n      : `${POPULAR_BASE_URL}&page=${page}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchMovie: async movieId => {\n    const endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}`;\n    return await (await fetch(endpoint)).json();\n  },\n  fetchCredits: async movieId => {\n    const creditsEndpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\n    return await (await fetch(creditsEndpoint)).json();\n  },\n  // Bonus material below for login\n  getRequestToken: async () => {\n    const reqToken = await (await fetch(REQUEST_TOKEN_URL)).json();\n    return reqToken.request_token;\n  },\n  authenticate: async (requestToken, username, password) => {\n    const bodyData = {\n      username,\n      password,\n      request_token: requestToken\n    };\n    // First authenticate the requestToken\n    const data = await (\n      await fetch(LOGIN_URL, {\n        ...defaultConfig,\n        body: JSON.stringify(bodyData)\n      })\n    ).json();\n    // Then get the sessionId with the requestToken\n    if (data.success) {\n      const sessionId = await (\n        await fetch(SESSION_ID_URL, {\n          ...defaultConfig,\n          body: JSON.stringify({ request_token: requestToken })\n        })\n      ).json();\n      return sessionId;\n    }\n  },\n  rateMovie: async (sessionId, movieId, value) => {\n    const endpoint = `${API_URL}movie/${movieId}/rating?api_key=${API_KEY}&session_id=${sessionId}`;\n\n    const rating = await (\n      await fetch(endpoint, {\n        ...defaultConfig,\n        body: JSON.stringify({ value })\n      })\n    ).json();\n\n    return rating;\n  }\n};\n\nexport default apiSettings;\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n// Convert a number to money formatting\nexport const convertMoney = money => {\n  const formatter = new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n\n\nexport const isPersistedState = stateName => {\n  const sessionState = sessionStorage.getItem(stateName);\n  return sessionState && JSON.parse(sessionState);\n};","import  {useState, useEffect} from 'react';\r\n\r\n//API\r\nimport API from '../API';\r\n\r\n//Helpers\r\nimport { isPersistedState } from '../helpers'\r\n\r\n//config\r\n// import { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\nconst initialState = {\r\n    page:0,\r\n    results:[],\r\n    total_pages:0,\r\n    total_results:0\r\n};\r\n\r\nexport const useHomeFetch = () =>{\r\n\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n\r\n    const [state, setState] = useState(initialState);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [error, setError] = useState(false);\r\n\r\n    const [isLoadingMore, setIsLoadingMore] = useState(false);\r\n\r\n    // console.log(searchTerm);\r\n\r\n    const fetchMovies = async(page, searchTerm = '')=>{\r\n        try{\r\n            setError(false);\r\n            setLoading(true);\r\n\r\n            const movies = await API.fetchMovies(searchTerm, page);\r\n            // console.log(movies);\r\n\r\n            setState(prev =>({\r\n                ...movies,\r\n                results:\r\n                    page > 1 ? [...prev.results, ...movies.results] : [...movies.results]\r\n            }));\r\n        }catch(error){\r\n            setError(true);\r\n        }\r\n        setLoading(false);\r\n    };\r\n// Initial and Search\r\n    useEffect(()=>{\r\n        if(!searchTerm){\r\n            const sessionState = isPersistedState('homeState');\r\n            if(sessionState){\r\n                console.log('Getting from SessionStorage')\r\n                setState(sessionState);\r\n                return;\r\n            }\r\n        }\r\n        console.log('Getting from API')\r\n        setState(initialState);\r\n        fetchMovies(1, searchTerm);\r\n\r\n    }, [searchTerm]);\r\n//Load More\r\n    useEffect(() => {\r\n        if(!isLoadingMore) return;\r\n        fetchMovies(state.page + 1, searchTerm);\r\n        setIsLoadingMore(false);\r\n        \r\n    }, [isLoadingMore, searchTerm, state.page]);\r\n\r\n// Write to sessionStorage\r\n    useEffect(() => {\r\n        if(!searchTerm) sessionStorage.setItem('homeState', JSON.stringify(state));\r\n        \r\n        \r\n    }, [searchTerm, state]);\r\n\r\n    return {state, loading, error, searchTerm, setSearchTerm, setIsLoadingMore};\r\n};","export default __webpack_public_path__ + \"static/media/no_image.22d2aa4d.jpg\";","import React  from 'react';\r\n\r\n//API\r\n// import API from '../API';\r\n\r\n//config\r\nimport { POSTER_SIZE, BACKDROP_SIZE, IMAGE_BASE_URL } from '../config';\r\n\r\n//Components\r\nimport HeroImage from './HeroImage';\r\nimport Grid from './Grid';\r\nimport Thumb from './Thumb';\r\nimport Spinner from './Spinner';\r\nimport SearchBar from './SearchBar';\r\nimport Button from './Button';\r\n\r\n//Hook\r\nimport {useHomeFetch} from '../hooks/useHomeFetch';\r\n\r\n//Image\r\nimport NoIamge from '../images/no_image.jpg';\r\n\r\nconst Home = () =>{\r\n    \r\n    const {\r\n            state, \r\n            loading, \r\n            error, \r\n            searchTerm, \r\n            setSearchTerm, \r\n            setIsLoadingMore\r\n        } = useHomeFetch();\r\n\r\n\r\n    console.log(state);\r\n\r\n    if(error) return <div>Something went wrong....</div>\r\n\r\n    return (\r\n        <>\r\n            {!searchTerm && state.results[0] ? (\r\n                <HeroImage  \r\n                        image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${state.results[0].backdrop_path} `}\r\n                        title={state.results[0].original_title}\r\n                        text ={state.results[0].overview}\r\n                    />\r\n            ) : null}\r\n\r\n            <SearchBar \r\n                setSearchTerm={setSearchTerm}\r\n            />\r\n\r\n            <Grid header={searchTerm ? 'Search Result' : 'Popular Movies' } >\r\n                {state.results.map(movie=>(\r\n                    <Thumb \r\n                        key = {movie.id} \r\n                        clickable\r\n                        image = {\r\n                            movie.poster_path\r\n                                ?   IMAGE_BASE_URL + POSTER_SIZE + movie.poster_path\r\n                                :   NoIamge\r\n                        }\r\n                        movieId = {movie.id}\r\n                    />\r\n                ))}\r\n            </Grid>\r\n            {loading && <Spinner />}\r\n            {state.page < state.total_pages && !loading && (\r\n                <Button \r\n                    text='Load More'\r\n                    callback={()=>setIsLoadingMore(true)}    \r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100%;\r\n    height: 70px;\r\n    background: var(--medGrey);\r\n    color: var(--white);\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\n    display: flex;\r\n    width: 100%;\r\n    max-width: var(--maxWidth);\r\n    padding: 0 20px;\r\n    div{\r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n        padding-left: 25px;\r\n        \r\n      \r\n        text-decoration: underline;\r\n        text-underline-position: under;\r\n        \r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size:var(--fontSmall);\r\n        }\r\n        \r\n    }\r\n\r\n    span{\r\n        \r\n        font-size: var(--fontMed);\r\n        color: var(--white);\r\n        padding-right: 10px;\r\n\r\n        @media screen and (max-width: 768px){\r\n            font-size:var(--fontSmall);\r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from '../BreadCrumb/BreadCrumb.styles';\r\n\r\nconst BreadCrumb = ({ movieTitle }) => (\r\n\r\n    <Wrapper>\r\n        <Content>\r\n            <Link to='/'>\r\n                <div  >Home</div>\r\n\r\n            </Link>\r\n            <span>|</span>\r\n            <span>{movieTitle}</span>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default BreadCrumb;","import styled from \"styled-components\";\r\nimport { IMAGE_BASE_URL,BACKDROP_SIZE } from \"../../config\";\r\n\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    background: ${({ backdrop })=>\r\n        backdrop ? `url(${IMAGE_BASE_URL}${BACKDROP_SIZE}${backdrop})`\r\n        : '#000'\r\n    };\r\n    background-size: cover;\r\n    background-position: center;\r\n    padding: 40px 40px;\r\n    animation: animateMovieInfo 1s;\r\n\r\n    @keyframes animateMovieInfo{\r\n        from{\r\n            opacity: 0;\r\n\r\n        }\r\n        to{\r\n            opacity: 1;\r\n        }\r\n    }\r\n\r\n`;\r\n\r\nexport const Content = styled.div`\r\n\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    margin: 0 auto;\r\n    background: rgba(0,0,0,0.7);\r\n    border-radius: 20px;\r\n\r\n    @media screen and (max-width: 768px){\r\n        display: block;\r\n        max-height: none;\r\n    }\r\n\r\n`;\r\n\r\nexport const Text = styled.div`\r\n\r\n    width: 100%;\r\n    \r\n    padding: 20px 40px;\r\n    color: var(--white);\r\n    overflow: hidden;\r\n\r\n    .rating-directors{\r\n        display: flex;\r\n        justify-content: flex-start;\r\n\r\n    }\r\n    .score{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        width: 35px;\r\n        height: 35px;\r\n        background: #fff;\r\n        color: #000;\r\n        font-weight: 800;\r\n        border-radius: 50%;\r\n        margin: 0;\r\n    }\r\n\r\n    .director{\r\n        \r\n        margin: 0 0 0 40px;\r\n        p{\r\n            margin: 0;\r\n        }\r\n\r\n    }\r\n\r\n    h1{\r\n        color: var(--white);\r\n        @media screen and (max-width: 768px){\r\n            font-size: var(--fontBig);\r\n        }\r\n    }\r\n\r\n\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper, Content, Text } from './MovieInfo.styles';\r\n\r\n//Components\r\nimport Thumb from '../Thumb';\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../../config';\r\n\r\n//Image\r\nimport NoImage from '../../images/no_image.jpg';\r\n\r\nconst MovieInfo = ({ movie }) => (\r\n\r\n    <Wrapper backdrop={movie.backdrop_path} >\r\n        <Content>\r\n            <Thumb\r\n                image={\r\n                        movie.poster_path \r\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}` \r\n                        : NoImage}\r\n                \r\n                clickable = {false}\r\n            />\r\n            <Text>\r\n                <h1> {movie.title} </h1>\r\n                <h3>PLOT</h3>\r\n                <p> {movie.overview} </p>\r\n\r\n                <div className='rating-directors'>\r\n                    <div>\r\n                        <h3>RATING</h3>\r\n                        <div className='score'>{movie.vote_average}</div>\r\n                    </div>\r\n                    <div className='director'>\r\n                        <h3>DIRECTOR{movie.directors.length > 1 ?'S':''}</h3>\r\n                        {movie.directors.map(director=>(\r\n                            <p key={director.credit_id}> {director.name} </p>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </Text>\r\n        </Content>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default MovieInfo;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    display: flex;\r\n    align-items: center;\r\n    min-height: 100px;\r\n    background: var(--darkGrey);\r\n    padding: 0 30px;\r\n\r\n`;\r\nexport const Content = styled.div`\r\n\r\n    display: flex;\r\n    max-width: var(--maxWidth);\r\n    width: 100%;\r\n    margin: 0 auto;\r\n\r\n    .column{\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        background: var(--medGrey);\r\n        border-radius: 20px;\r\n        margin: 0 20px;\r\n        flex: 1;\r\n\r\n        :first-child{\r\n            margin-left: 0;\r\n        }\r\n        :last-child{\r\n            margin-right: 0;\r\n        }\r\n    }\r\n\r\n    @media screen and (max-width:768px){\r\n        display: block;\r\n\r\n        .column{\r\n            margin:20px 0;\r\n        }\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\n//Helpers\r\nimport { calcTime, convertMoney } from '../../helpers';\r\n\r\n//Styles\r\nimport { Wrapper, Content } from './MovieInfoBar.styles';\r\n\r\nconst MovieInfoBar = ({time, budget, revenue}) => (\r\n    <Wrapper>\r\n        <Content>\r\n            <div className='column'>\r\n                <p> Running time: {calcTime(time)}</p>\r\n            </div>\r\n            <div className='column'>\r\n                <p> Budget: {convertMoney(budget)}</p>\r\n            </div>\r\n            <div className='column'>\r\n                <p> Revenue: {convertMoney(revenue)}</p>\r\n            </div>\r\n        </Content>\r\n    </Wrapper>\r\n);\r\n\r\nexport default MovieInfoBar;","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n    color: var(--white);\r\n    background: var(--darkGrey);\r\n    border-radius: 20px;\r\n    padding: 5px;\r\n    text-align: center;\r\n\r\n    h3{\r\n        margin: 10px 0 0 0;\r\n\r\n    }\r\n    p{\r\n        margin: 5px 0;\r\n    }\r\n\r\n`;\r\n\r\nexport const Image = styled.img`\r\n\r\n    display: block;\r\n    width: 100%;\r\n    height: 200px;\r\n    object-fit: cover;\r\n    border-radius: 15px;\r\n\r\n`;","import React from 'react';\r\n\r\n//Styles\r\nimport { Wrapper, Image } from './Actor.styles';\r\n\r\nconst Actor = ({name, character, imageUrl }) => (\r\n \r\n    <Wrapper>\r\n        <Image src = {imageUrl} alt = 'actor-thumb' />\r\n        <h3>{name}</h3>\r\n        <p>{character}</p>\r\n    </Wrapper>\r\n\r\n);\r\n\r\nexport default Actor;","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n//Components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\nimport Actor from './Actor';\r\n\r\n//Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n\r\n    const { movieId } =  useParams();\r\n\r\n    const{ state: movie, loading, error} = useMovieFetch(movieId);\r\n\r\n    if (loading) return <Spinner/>\r\n    if(error) return <div>Something went wrong...</div>\r\n\r\n    console.log(movie);\r\n\r\n    return(\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time = {movie.runtime}\r\n                budget = {movie.budget}\r\n                revenue = {movie.revenue}\r\n            />\r\n            <Grid header='Actors'>\r\n                {movie.actors.map(actor=>(\r\n                    <Actor\r\n                        key={actor.credit_id}\r\n                        name={actor.name}\r\n                        character={actor.character}\r\n                        imageUrl={\r\n                            actor.profile_path\r\n                            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${actor.profile_path}`\r\n                            : NoImage\r\n                        }\r\n                    />\r\n                ))}\r\n            </Grid>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;","import { useState, useEffect } from \"react\";\r\nimport API from '../API';\r\n\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = movieId =>{\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //Get directors only\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === 'Director'\r\n                );\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors\r\n                });\r\n\r\n                setLoading(false);\r\n\r\n            }catch(error){\r\n                setError(true);\r\n            }\r\n        };\r\n        const sessionState = isPersistedState(movieId);\r\n        if(sessionState){\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        } \r\n        \r\n        fetchMovie();\r\n    }, [movieId]);\r\n// Write to sessionStorage\r\n    useEffect(() => {\r\n        sessionStorage.setItem(movieId, JSON.stringify(state))\r\n\r\n    }, [movieId, state]);\r\n\r\n    return {state, loading, error};\r\n}","import React from 'react';\r\n\r\nconst NotFound = () => <div>NotFound</div>\r\n\r\nexport default NotFound;","import React from 'react';\n//Routing\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\n\n//Styles with SCSS\n// import stylesApp from './App.module.css';\n// import stylesGlobal from './GlobalStyle.css';\n// import './globalStyle.scss';\n\n//Styles with Styled-Components\nimport { GlobalStyle } from './GlobalStyle';\n\n//Components\nimport  Header  from './components/Header';\nimport Home from './components/Home';\nimport Movie from './components/Movie';\nimport NotFound from './components/NotFound';\n\n\nconst App = () => \n   (\n    <Router>\n      <Header  />\n      <Routes>\n        <Route path='/' element={<Home/>} />\n        <Route path='/:movieId' element={<Movie/>} />\n        <Route path='/*' element={<NotFound/>} />\n      </Routes>\n      \n      <GlobalStyle />\n    </Router>\n  );\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}
{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useState,useEffect}from\"react\";import API from'../API';//Helpers\nimport{isPersistedState}from\"../helpers\";export var useMovieFetch=function useMovieFetch(movieId){var _useState=useState({}),_useState2=_slicedToArray(_useState,2),state=_useState2[0],setState=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];useEffect(function(){var fetchMovie=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var movie,credits,directors;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;setLoading(true);setError(false);_context.next=5;return API.fetchMovie(movieId);case 5:movie=_context.sent;_context.next=8;return API.fetchCredits(movieId);case 8:credits=_context.sent;//Get directors only\ndirectors=credits.crew.filter(function(member){return member.job==='Director';});setState(_objectSpread(_objectSpread({},movie),{},{actors:credits.cast,directors:directors}));setLoading(false);_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](0);setError(true);case 17:case\"end\":return _context.stop();}}},_callee,null,[[0,14]]);}));return function fetchMovie(){return _ref.apply(this,arguments);};}();var sessionState=isPersistedState(movieId);if(sessionState){setState(sessionState);setLoading(false);return;}fetchMovie();},[movieId]);// Write to sessionStorage\nuseEffect(function(){sessionStorage.setItem(movieId,JSON.stringify(state));},[movieId,state]);return{state:state,loading:loading,error:error};};","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/src/hooks/useMovieFetch.js"],"names":["useState","useEffect","API","isPersistedState","useMovieFetch","movieId","state","setState","loading","setLoading","error","setError","fetchMovie","movie","fetchCredits","credits","directors","crew","filter","member","job","actors","cast","sessionState","sessionStorage","setItem","JSON","stringify"],"mappings":"wkBAAA,OAASA,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA;AACA,OAASC,gBAAT,KAAiC,YAAjC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAC,OAAO,CAAG,CACnC,cAA0BL,QAAQ,CAAC,EAAD,CAAlC,wCAAOM,KAAP,eAAcC,QAAd,eACA,eAA8BP,QAAQ,CAAC,IAAD,CAAtC,yCAAOQ,OAAP,eAAgBC,UAAhB,eACA,eAA0BT,QAAQ,CAAC,KAAD,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eAEAV,SAAS,CAAC,UAAM,CACZ,GAAMW,CAAAA,UAAU,0FAAG,+KAEXH,UAAU,CAAC,IAAD,CAAV,CACAE,QAAQ,CAAC,KAAD,CAAR,CAHW,sBAIST,CAAAA,GAAG,CAACU,UAAJ,CAAeP,OAAf,CAJT,QAILQ,KAJK,qCAKWX,CAAAA,GAAG,CAACY,YAAJ,CAAiBT,OAAjB,CALX,QAKLU,OALK,eAMX;AACMC,SAPK,CAOOD,OAAO,CAACE,IAAR,CAAaC,MAAb,CACd,SAAAC,MAAM,QAAIA,CAAAA,MAAM,CAACC,GAAP,GAAe,UAAnB,EADQ,CAPP,CAWXb,QAAQ,gCACDM,KADC,MAEJQ,MAAM,CAAEN,OAAO,CAACO,IAFZ,CAGJN,SAAS,CAATA,SAHI,GAAR,CAMAP,UAAU,CAAC,KAAD,CAAV,CAjBW,iFAoBXE,QAAQ,CAAC,IAAD,CAAR,CApBW,qEAAH,kBAAVC,CAAAA,UAAU,0CAAhB,CAuBA,GAAMW,CAAAA,YAAY,CAAGpB,gBAAgB,CAACE,OAAD,CAArC,CACA,GAAGkB,YAAH,CAAgB,CACZhB,QAAQ,CAACgB,YAAD,CAAR,CACAd,UAAU,CAAC,KAAD,CAAV,CACA,OACH,CAEDG,UAAU,GACb,CAhCQ,CAgCN,CAACP,OAAD,CAhCM,CAAT,CAiCJ;AACIJ,SAAS,CAAC,UAAM,CACZuB,cAAc,CAACC,OAAf,CAAuBpB,OAAvB,CAAgCqB,IAAI,CAACC,SAAL,CAAerB,KAAf,CAAhC,EAEH,CAHQ,CAGN,CAACD,OAAD,CAAUC,KAAV,CAHM,CAAT,CAKA,MAAO,CAACA,KAAK,CAALA,KAAD,CAAQE,OAAO,CAAPA,OAAR,CAAiBE,KAAK,CAALA,KAAjB,CAAP,CACH,CA7CM","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport API from '../API';\r\n\r\n//Helpers\r\nimport { isPersistedState } from \"../helpers\";\r\n\r\nexport const useMovieFetch = movieId =>{\r\n    const [state, setState] = useState({});\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try{\r\n                setLoading(true);\r\n                setError(false);\r\n                const movie = await API.fetchMovie(movieId);\r\n                const credits = await API.fetchCredits(movieId);\r\n                //Get directors only\r\n                const directors = credits.crew.filter(\r\n                    member => member.job === 'Director'\r\n                );\r\n\r\n                setState({\r\n                    ...movie,\r\n                    actors: credits.cast,\r\n                    directors\r\n                });\r\n\r\n                setLoading(false);\r\n\r\n            }catch(error){\r\n                setError(true);\r\n            }\r\n        };\r\n        const sessionState = isPersistedState(movieId);\r\n        if(sessionState){\r\n            setState(sessionState);\r\n            setLoading(false);\r\n            return;\r\n        } \r\n        \r\n        fetchMovie();\r\n    }, [movieId]);\r\n// Write to sessionStorage\r\n    useEffect(() => {\r\n        sessionStorage.setItem(movieId, JSON.stringify(state))\r\n\r\n    }, [movieId, state]);\r\n\r\n    return {state, loading, error};\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gaura\\\\OneDrive\\\\Desktop\\\\react_crash_course\\\\prime_moviedb\\\\src\\\\components\\\\Movie.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom'; //Config\n\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config'; //Components\n\nimport Grid from './Grid';\nimport Spinner from './Spinner';\nimport BreadCrumb from './BreadCrumb';\nimport MovieInfo from './MovieInfo';\nimport MovieInfoBar from './MovieInfoBar'; //Hook\n\nimport { useMovieFetch } from '../hooks/useMovieFetch'; //Image\n\nimport NoImage from '../images/no_image.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Movie = () => {\n  _s();\n\n  const {\n    movieId\n  } = useParams();\n  const {\n    state: movie,\n    loading,\n    error\n  } = useMovieFetch(movieId);\n  if (loading) return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Something went wrong...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 22\n  }, this);\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BreadCrumb, {\n      movieTitle: movie.original_title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfo, {\n      movie: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MovieInfoBar, {\n      time: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Movie, \"frnTLv+vebv5mS1pRfQ2qWZ8088=\", false, function () {\n  return [useParams, useMovieFetch];\n});\n\n_c = Movie;\nexport default Movie;\n\nvar _c;\n\n$RefreshReg$(_c, \"Movie\");","map":{"version":3,"sources":["C:/Users/gaura/OneDrive/Desktop/react_crash_course/prime_moviedb/src/components/Movie.js"],"names":["React","useParams","IMAGE_BASE_URL","POSTER_SIZE","Grid","Spinner","BreadCrumb","MovieInfo","MovieInfoBar","useMovieFetch","NoImage","Movie","movieId","state","movie","loading","error","console","log","original_title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B,C,CAEA;;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C,C,CAEA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,gBAAzB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,wBAA9B,C,CAEA;;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAEhB,QAAM;AAAEC,IAAAA;AAAF,MAAeX,SAAS,EAA9B;AAEA,QAAK;AAAEY,IAAAA,KAAK,EAAEC,KAAT;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA;AAAzB,MAAkCP,aAAa,CAACG,OAAD,CAApD;AAEA,MAAIG,OAAJ,EAAa,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAGC,KAAH,EAAU,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEVC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,UAAU,EAAEA,KAAK,CAACK;AAA9B;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEL;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,YAAD;AACI,MAAA,IAAI;AADR;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADJ;AASH,CApBD;;GAAMH,K;UAEmBV,S,EAEkBQ,a;;;KAJrCE,K;AAsBN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n//Config\r\nimport { IMAGE_BASE_URL, POSTER_SIZE } from '../config';\r\n\r\n//Components\r\nimport Grid from './Grid';\r\nimport Spinner from './Spinner';\r\nimport BreadCrumb from './BreadCrumb';\r\nimport MovieInfo from './MovieInfo';\r\nimport MovieInfoBar from './MovieInfoBar';\r\n\r\n//Hook\r\nimport { useMovieFetch } from '../hooks/useMovieFetch';\r\n\r\n//Image\r\nimport NoImage from '../images/no_image.jpg';\r\n\r\nconst Movie = () => {\r\n\r\n    const { movieId } =  useParams();\r\n\r\n    const{ state: movie, loading, error} = useMovieFetch(movieId);\r\n\r\n    if (loading) return <Spinner/>\r\n    if(error) return <div>Something went wrong...</div>\r\n\r\n    console.log(movie);\r\n\r\n    return(\r\n        <>\r\n            <BreadCrumb movieTitle={movie.original_title} />\r\n            <MovieInfo movie={movie} />\r\n            <MovieInfoBar \r\n                time\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Movie;"]},"metadata":{},"sourceType":"module"}